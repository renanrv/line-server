name: Go Tests

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      # Checkout the code
      - name: Checkout code
        uses: actions/checkout@v3

      # Set up Go environment
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: 1.24

      # Cache Go modules
      - name: Cache Go modules
        uses: actions/cache@v4
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      # Install dependencies
      - name: Install dependencies
        run: go mod tidy

      # Run tests and generate coverage report
      - name: Run tests with coverage
        run: |
          mkdir -p .coverage
          rm -f .coverage/cover_unit.out
          go test -timeout=10s -race -benchmem -tags=unit -coverpkg=./... -coverprofile=".coverage/cover_unit.out" ./...
          rm -f .coverage/cover.out
          rm -f .coverage/cover_unit.main_filtered.out
          rm -f .coverage/cover_unit.filtered.out
          grep -v "main.go" .coverage/cover_unit.out > .coverage/cover_unit.main_filtered.out
          grep -v "server/server.gen.go" .coverage/cover_unit.main_filtered.out > .coverage/cover_unit.filtered.out
          cat .coverage/cover_unit.filtered.out >> .coverage/cover.out
          go tool cover -func=.coverage/cover.out | grep total | awk '{print $3}' > coverage.txt
          go tool cover -func=.coverage/cover.out

      # Generate HTML coverage report
      - name: Update coverage report
        uses: ncruces/go-coverage-report@v0
        with:
          coverage-file: .coverage/cover.out
          report: true
          chart: true
          amend: true
        continue-on-error: true
